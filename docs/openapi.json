{
  "openapi": "3.0.3",
  "info": {
    "title": "Family Finance Web Application API",
    "version": "1.0.0",
    "description": "Comprehensive API for the KGiQ Family Finance Web Application.\n\nThis API provides endpoints for family financial management including:\n- User authentication and session management\n- Family member and invitation management\n- Income event tracking and scheduling\n- Payment management and attribution\n- Bank account integration via Plaid\n- Transaction categorization and analysis\n- Budget creation and allocation\n- Financial reports and analytics\n\n## Authentication\nMost endpoints require Bearer token authentication. Use the /auth/login endpoint to obtain tokens.\n\n## Rate Limiting\nAPI requests are rate limited to prevent abuse. See response headers for current limits.\n\n## Pagination\nList endpoints support pagination with 'page' and 'pageSize' query parameters.",
    "contact": {
      "name": "KGiQ Development Team",
      "email": "dev@kgiq.com",
      "url": "https://kgiq.com"
    },
    "license": {
      "name": "Private License",
      "url": "https://kgiq.com/license"
    }
  },
  "servers": [
    {
      "url": "https://family-finance.kgiq.com",
      "description": "Production server"
    },
    {
      "url": "https://staging-family-finance.kgiq.com",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {"name": "Authentication", "description": "User authentication and session management"},
    {"name": "Family Management", "description": "Family and member management operations"},
    {"name": "Income Management", "description": "Income event tracking and scheduling"},
    {"name": "Payment Management", "description": "Payment management and attribution"},
    {"name": "Bank Integration", "description": "Bank account and transaction integration via Plaid"},
    {"name": "Transactions", "description": "Transaction categorization and analysis"},
    {"name": "Budget Management", "description": "Budget categories and allocations"},
    {"name": "Reports & Analytics", "description": "Financial reports and analytics"}
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "operationId": "postAuthRegister",
        "summary": "User registration",
        "description": "Register a new user and create a family",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/RegisterRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"},
                    "family": {"$ref": "#/components/schemas/Family"},
                    "tokens": {"$ref": "#/components/schemas/AuthTokens"}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "500": {"$ref": "#/components/responses/InternalError"}
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "postAuthLogin",
        "summary": "User authentication",
        "description": "Authenticate user and return access tokens",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/LoginRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"},
                    "tokens": {"$ref": "#/components/schemas/AuthTokens"}
                  }
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "400": {"$ref": "#/components/responses/BadRequest"},
          "500": {"$ref": "#/components/responses/InternalError"}
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "postAuthLogout",
        "summary": "User logout",
        "description": "Logout user and invalidate tokens",
        "tags": ["Authentication"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {"$ref": "#/components/responses/Success"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "getAuthProfile",
        "summary": "Get user profile",
        "description": "Get current authenticated user profile",
        "tags": ["Authentication"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/families": {
      "get": {
        "operationId": "getFamilies",
        "summary": "Get family information",
        "description": "Get current user's family information",
        "tags": ["Family Management"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Family information retrieved",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Family"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "put": {
        "operationId": "putFamilies",
        "summary": "Update family",
        "description": "Update family information",
        "tags": ["Family Management"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "currency": {"type": "string"},
                  "timezone": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Family updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Family"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "400": {"$ref": "#/components/responses/BadRequest"}
        }
      }
    },
    "/api/income-events": {
      "get": {
        "operationId": "getIncomeEvents",
        "summary": "List income events",
        "description": "Get paginated list of income events",
        "tags": ["Income Management"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/Page"},
          {"$ref": "#/components/parameters/PageSize"}
        ],
        "responses": {
          "200": {
            "description": "Income events retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/IncomeEvent"}
                    },
                    "pagination": {"$ref": "#/components/schemas/PaginationInfo"}
                  }
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "post": {
        "operationId": "postIncomeEvents",
        "summary": "Create income event",
        "description": "Create a new income event",
        "tags": ["Income Management"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "amount", "frequency", "nextDate"],
                "properties": {
                  "name": {"type": "string"},
                  "amount": {"type": "number", "format": "decimal"},
                  "frequency": {"type": "string", "enum": ["weekly", "biweekly", "monthly", "quarterly", "annually"]},
                  "nextDate": {"type": "string", "format": "date"},
                  "source": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Income event created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/IncomeEvent"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/payments": {
      "get": {
        "operationId": "getPayments",
        "summary": "List payments",
        "description": "Get paginated list of payments",
        "tags": ["Payment Management"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/Page"},
          {"$ref": "#/components/parameters/PageSize"}
        ],
        "responses": {
          "200": {
            "description": "Payments retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Payment"}
                    },
                    "pagination": {"$ref": "#/components/schemas/PaginationInfo"}
                  }
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/bank-accounts": {
      "get": {
        "operationId": "getBankAccounts",
        "summary": "List bank accounts",
        "description": "Get list of connected bank accounts",
        "tags": ["Bank Integration"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Bank accounts retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/BankAccount"}
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "post": {
        "operationId": "postBankAccounts",
        "summary": "Connect bank account",
        "description": "Connect a new bank account via Plaid",
        "tags": ["Bank Integration"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["public_token"],
                "properties": {
                  "public_token": {"type": "string", "description": "Plaid public token"},
                  "account_id": {"type": "string", "description": "Plaid account ID"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bank account connected",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BankAccount"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/transactions": {
      "get": {
        "operationId": "getTransactions",
        "summary": "List transactions",
        "description": "Get paginated list of transactions",
        "tags": ["Transactions"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/Page"},
          {"$ref": "#/components/parameters/PageSize"},
          {
            "name": "bankAccountId",
            "in": "query",
            "schema": {"type": "string", "format": "uuid"},
            "description": "Filter by bank account"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {"type": "string", "format": "date"},
            "description": "Start date filter"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {"type": "string", "format": "date"},
            "description": "End date filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Transaction"}
                    },
                    "pagination": {"$ref": "#/components/schemas/PaginationInfo"}
                  }
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/budget-categories": {
      "get": {
        "operationId": "getBudgetCategories",
        "summary": "List budget categories",
        "description": "Get list of budget categories",
        "tags": ["Budget Management"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Budget categories retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/BudgetCategory"}
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "post": {
        "operationId": "postBudgetCategories",
        "summary": "Create budget category",
        "description": "Create a new budget category",
        "tags": ["Budget Management"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "percentage"],
                "properties": {
                  "name": {"type": "string"},
                  "percentage": {"type": "number", "format": "decimal", "minimum": 0, "maximum": 100},
                  "description": {"type": "string"},
                  "isFixed": {"type": "boolean"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Budget category created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BudgetCategory"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    },
    "/api/reports/cash-flow": {
      "get": {
        "operationId": "getReportsCashFlow",
        "summary": "Cash flow report",
        "description": "Generate cash flow report for specified period",
        "tags": ["Reports & Analytics"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {"type": "string", "format": "date"},
            "description": "Report start date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {"type": "string", "format": "date"},
            "description": "Report end date"
          }
        ],
        "responses": {
          "200": {
            "description": "Cash flow report generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "startDate": {"type": "string", "format": "date"},
                    "endDate": {"type": "string", "format": "date"},
                    "totalIncome": {"type": "number", "format": "decimal"},
                    "totalExpenses": {"type": "number", "format": "decimal"},
                    "netCashFlow": {"type": "number", "format": "decimal"},
                    "transactions": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Transaction"}
                    }
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      }
    },
    "parameters": {
      "Page": {
        "name": "page",
        "in": "query",
        "schema": {"type": "integer", "minimum": 1, "default": 1},
        "description": "Page number for pagination"
      },
      "PageSize": {
        "name": "pageSize",
        "in": "query",
        "schema": {"type": "integer", "minimum": 1, "maximum": 100, "default": 20},
        "description": "Number of items per page"
      }
    },
    "responses": {
      "Success": {
        "description": "Operation successful",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/SuccessResponse"}
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ErrorResponse"}
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ErrorResponse"}
          }
        }
      },
      "InternalError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ErrorResponse"}
          }
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "email", "firstName", "lastName", "familyId", "role"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "User unique identifier"},
          "email": {"type": "string", "format": "email", "description": "User email address"},
          "firstName": {"type": "string", "description": "User first name"},
          "lastName": {"type": "string", "description": "User last name"},
          "familyId": {"type": "string", "format": "uuid", "description": "Family identifier"},
          "role": {"type": "string", "enum": ["admin", "member"], "description": "User role in family"},
          "phone": {"type": "string", "description": "Phone number (optional)"},
          "dateOfBirth": {"type": "string", "format": "date", "description": "Date of birth (optional)"},
          "timezone": {"type": "string", "description": "User timezone"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Account creation date"},
          "updatedAt": {"type": "string", "format": "date-time", "description": "Last update date"}
        }
      },
      "Family": {
        "type": "object",
        "required": ["id", "name", "currency"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Family unique identifier"},
          "name": {"type": "string", "description": "Family name"},
          "currency": {"type": "string", "description": "Default currency (USD, EUR, etc.)"},
          "timezone": {"type": "string", "description": "Family timezone"},
          "settings": {"type": "object", "description": "Family-specific settings"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"},
          "updatedAt": {"type": "string", "format": "date-time", "description": "Last update date"}
        }
      },
      "BankAccount": {
        "type": "object",
        "required": ["id", "familyId", "institutionName", "accountType", "isActive"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Bank account identifier"},
          "familyId": {"type": "string", "format": "uuid", "description": "Family identifier"},
          "plaidAccountId": {"type": "string", "description": "Plaid account identifier"},
          "institutionName": {"type": "string", "description": "Bank institution name"},
          "accountName": {"type": "string", "description": "Account display name"},
          "accountType": {"type": "string", "enum": ["checking", "savings", "credit"], "description": "Account type"},
          "accountNumber": {"type": "string", "description": "Masked account number"},
          "routingNumber": {"type": "string", "description": "Bank routing number"},
          "balance": {"type": "number", "format": "decimal", "description": "Current balance"},
          "availableBalance": {"type": "number", "format": "decimal", "description": "Available balance"},
          "isActive": {"type": "boolean", "description": "Account active status"},
          "lastSyncAt": {"type": "string", "format": "date-time", "description": "Last synchronization date"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "Transaction": {
        "type": "object",
        "required": ["id", "bankAccountId", "plaidTransactionId", "amount", "date"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Transaction identifier"},
          "bankAccountId": {"type": "string", "format": "uuid", "description": "Bank account identifier"},
          "plaidTransactionId": {"type": "string", "description": "Plaid transaction ID"},
          "amount": {"type": "number", "format": "decimal", "description": "Transaction amount"},
          "description": {"type": "string", "description": "Transaction description"},
          "date": {"type": "string", "format": "date", "description": "Transaction date"},
          "category": {"type": "string", "description": "Transaction category"},
          "spendingCategoryId": {"type": "string", "format": "uuid", "description": "Assigned spending category"},
          "isPending": {"type": "boolean", "description": "Transaction pending status"},
          "matchedPaymentId": {"type": "string", "format": "uuid", "description": "Matched payment ID"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "IncomeEvent": {
        "type": "object",
        "required": ["id", "familyId", "name", "amount", "frequency", "nextDate"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Income event identifier"},
          "familyId": {"type": "string", "format": "uuid", "description": "Family identifier"},
          "name": {"type": "string", "description": "Income event name"},
          "amount": {"type": "number", "format": "decimal", "description": "Expected income amount"},
          "frequency": {"type": "string", "enum": ["weekly", "biweekly", "monthly", "quarterly", "annually"], "description": "Income frequency"},
          "nextDate": {"type": "string", "format": "date", "description": "Next expected date"},
          "lastReceivedDate": {"type": "string", "format": "date", "description": "Last received date"},
          "lastReceivedAmount": {"type": "number", "format": "decimal", "description": "Last received amount"},
          "source": {"type": "string", "description": "Income source description"},
          "isActive": {"type": "boolean", "description": "Income event active status"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "Payment": {
        "type": "object",
        "required": ["id", "familyId", "name", "amount", "dueDate"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Payment identifier"},
          "familyId": {"type": "string", "format": "uuid", "description": "Family identifier"},
          "name": {"type": "string", "description": "Payment name"},
          "amount": {"type": "number", "format": "decimal", "description": "Payment amount"},
          "dueDate": {"type": "string", "format": "date", "description": "Payment due date"},
          "isPaid": {"type": "boolean", "description": "Payment status"},
          "paidDate": {"type": "string", "format": "date", "description": "Date payment was made"},
          "paidAmount": {"type": "number", "format": "decimal", "description": "Actual amount paid"},
          "frequency": {"type": "string", "enum": ["one-time", "weekly", "monthly", "quarterly", "annually"], "description": "Payment frequency"},
          "spendingCategoryId": {"type": "string", "format": "uuid", "description": "Spending category"},
          "notes": {"type": "string", "description": "Payment notes"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "BudgetCategory": {
        "type": "object",
        "required": ["id", "familyId", "name", "percentage"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Budget category identifier"},
          "familyId": {"type": "string", "format": "uuid", "description": "Family identifier"},
          "name": {"type": "string", "description": "Category name"},
          "percentage": {"type": "number", "format": "decimal", "minimum": 0, "maximum": 100, "description": "Percentage of income"},
          "description": {"type": "string", "description": "Category description"},
          "isFixed": {"type": "boolean", "description": "Fixed or percentage-based"},
          "sortOrder": {"type": "number", "description": "Display order"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "BudgetAllocation": {
        "type": "object",
        "required": ["id", "incomeEventId", "budgetCategoryId", "amount"],
        "properties": {
          "id": {"type": "string", "format": "uuid", "description": "Budget allocation identifier"},
          "incomeEventId": {"type": "string", "format": "uuid", "description": "Income event identifier"},
          "budgetCategoryId": {"type": "string", "format": "uuid", "description": "Budget category identifier"},
          "amount": {"type": "number", "format": "decimal", "description": "Allocated amount"},
          "percentage": {"type": "number", "format": "decimal", "description": "Allocation percentage"},
          "createdAt": {"type": "string", "format": "date-time", "description": "Creation date"}
        }
      },
      "AuthTokens": {
        "type": "object",
        "required": ["accessToken", "refreshToken", "expiresIn"],
        "properties": {
          "accessToken": {"type": "string", "description": "JWT access token"},
          "refreshToken": {"type": "string", "description": "JWT refresh token"},
          "expiresIn": {"type": "number", "description": "Token expiration time in seconds"},
          "tokenType": {"type": "string", "example": "Bearer", "description": "Token type"}
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password", "firstName", "lastName", "familyName"],
        "properties": {
          "email": {"type": "string", "format": "email", "description": "User email address"},
          "password": {"type": "string", "minLength": 8, "description": "User password (min 8 characters)"},
          "firstName": {"type": "string", "description": "User first name"},
          "lastName": {"type": "string", "description": "User last name"},
          "familyName": {"type": "string", "description": "Family name"},
          "phone": {"type": "string", "description": "Phone number (optional)"},
          "timezone": {"type": "string", "description": "User timezone"},
          "currency": {"type": "string", "description": "Preferred currency"}
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {"type": "string", "format": "email", "description": "User email address"},
          "password": {"type": "string", "description": "User password"}
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {"type": "string", "description": "Error message"},
          "error": {"type": "string", "description": "Error type"},
          "statusCode": {"type": "number", "description": "HTTP status code"},
          "timestamp": {"type": "string", "format": "date-time", "description": "Error timestamp"},
          "path": {"type": "string", "description": "API endpoint path"}
        }
      },
      "SuccessResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {"type": "string", "description": "Success message"},
          "data": {"type": "object", "description": "Response data"}
        }
      },
      "PaginationInfo": {
        "type": "object",
        "required": ["page", "pageSize", "totalCount", "totalPages"],
        "properties": {
          "page": {"type": "number", "description": "Current page number"},
          "pageSize": {"type": "number", "description": "Items per page"},
          "totalCount": {"type": "number", "description": "Total number of items"},
          "totalPages": {"type": "number", "description": "Total number of pages"}
        }
      }
    }
  }
}